<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>My First Post</title>
    <url>/2020/10/12/my-first-post/</url>
    <content><![CDATA[<p>Blog 建成！</p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/10/12/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Python基础知识点</title>
    <url>/2021/09/18/python-ji-chu-zhi-shi-dian/</url>
    <content><![CDATA[<h1 id="Python基础知识点"><a href="#Python基础知识点" class="headerlink" title="Python基础知识点"></a>Python基础知识点</h1><h2 id="数据类型6个"><a href="#数据类型6个" class="headerlink" title="数据类型6个"></a>数据类型6个</h2><ol>
<li><strong>整型 int</strong><br>数学中的整数，如1，-8080，0    </li>
<li><strong>实型（浮点数）float</strong><br>数学中的实数，如3.14，9e-4  </li>
<li><strong>字符串 string</strong><br>以引号开始结束的一串字符，如<code>&#39;this is a string&#39;</code>  </li>
<li><strong>布尔型 bool</strong><br>只有<code>True</code>和<code>False</code>两个值  </li>
<li><strong>列表 list</strong><br>以中括号开始结束的一种数据类型，如<code>[1,2,3,4,5]</code>  </li>
<li><strong>字典 dictionary</strong><br>以大括号开始结束，存储内容为键值对，如<code>&#123;&#39;name&#39;:&#39;wow&#39;,&#39;age&#39;:17&#125;</code><br>取出下列字典中的’name’键对应的值：<blockquote>
<p>d={‘name’:’wow’,’age’:17}<br>d[‘name’]</p>
</blockquote>
</li>
</ol>
<h4 id="索引与切片"><a href="#索引与切片" class="headerlink" title="索引与切片"></a>索引与切片</h4><p>请写出下列索引与切片的结果</p>
<blockquote>
<p>info=[‘hello’,’what’,5432]<br>info2=[ [‘world’,’you’],[231,’how’] ]<br>info[1]<br>info[1][0]<br>info[1][1:3]<br>info2[0]<br>info2[1][0]<br>info2[1][1][0]<br>info2[1][1][1:3]  </p>
</blockquote>
<hr>
<h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><p><code>+-*/</code>加减乘除  <code>//</code>整除，结果取整数部分<br><code>%</code>取余数  <code>**</code>乘方   </p>
<p><em>算数运算符得到的结果为数</em> </p>
<h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p><code>&gt;&lt;</code>大于小于 <code>&gt;= &lt;=</code>大于等于 小于等于<br><code>==</code>等于<code>!=</code>不等于<br><code>in</code>包含于  </p>
<p><em>关系运算得到的结果为布尔型，即<code>True</code>和<code>False</code></em></p>
<h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p><code>and</code>与运算，只有两个<code>True</code>结果才为<code>True</code><br><code>or</code> 或运算，只要有一个<code>True</code>结果就为<code>True</code><br><code>not</code>非运算，<code>not True</code>结果为<code>False</code></p>
<p><em>逻辑运算得到的结果为布尔型，即<code>True</code>和<code>False</code></em>  </p>
<hr>
<h2 id="变量和赋值"><a href="#变量和赋值" class="headerlink" title="变量和赋值"></a>变量和赋值</h2><p><strong>常量</strong>：0，3.14，60000，pi，e等数学上的客观数字<br><strong>变量</strong>：在编程中声明/定义的一个代号，用于存储数据。变量名可以包括字母、数字、下划线，不可以用数字开头  </p>
<p><strong>赋值语句</strong><br><code>=</code>用于赋值，将等号右侧的值赋给左侧的变量  </p>
<blockquote>
<p>n=0    #将0赋值给变量n<br>n=n+1  #将n+1的值赋给变量n<br>n+=1   #将n+1的值赋给变量n，即n的值增加1  </p>
</blockquote>
<p><em>注意：<code>==</code>和<code>=</code>在用法上完全不同</em></p>
<h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><p><code>print(x)</code>输出x的值<br><code>input(x)</code>将x的值输出在屏幕上，并读取用户的输入，以字符串存储<br><code>int(x)</code>将x转换为整型<br><code>float(x)</code>将x转换为浮点数  </p>
<hr>
<h2 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h2><blockquote>
<p>if 条件:<br>&emsp;&emsp;语句<br>elif 条件:<br>&emsp;&emsp;语句<br>else:<br>&emsp;&emsp;语句  </p>
</blockquote>
<p>例：  </p>
<blockquote>
<p>if x%2==0:<br>&emsp;&emsp;print(‘偶数’)<br>esle:<br>&emsp;&emsp;print(‘奇数’)</p>
</blockquote>
<h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><p>序列遍历完成后退出循环</p>
<blockquote>
<p>for 变量 in 序列:<br>&emsp;&emsp;循环体  </p>
</blockquote>
<p>例：  </p>
<blockquote>
<p>s=0<br>for i in range(0,101,1):<br>&emsp;&emsp;s+=i<br>&emsp;&emsp;print(i)  </p>
</blockquote>
<h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><p>循环条件为<code>True</code>时进入循环，否则退出循环  </p>
<blockquote>
<p>while 循环条件:<br>&emsp;&emsp;循环体  </p>
</blockquote>
<p>例：  </p>
<blockquote>
<p>s=0<br>i=0<br>while i&lt;=100:<br>&emsp;&emsp;s+=i<br>&emsp;&emsp;print(i)</p>
</blockquote>
<p><em><strong>代码除了横向阅读，也要纵向阅读</strong></em><br><em><strong>横向阅读看<code>功能</code>，纵向阅读看<code>结构</code></strong></em><br><em><strong>注意循环体和分支结构语句块的缩进</strong></em></p>
<hr>
<h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a>习题</h2><p>使用for循环和while循环两种方式计算[100,1000]中所有奇数的和<br>请在下方书写<br><em>提示：判断一个数是偶数还是奇数是用余数的方式</em>  </p>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>信息技术</tag>
        <tag>支教</tag>
      </tags>
  </entry>
  <entry>
    <title>清河村支教回忆</title>
    <url>/2021/09/23/qing-he-cun-zhi-jiao-hui-yi/</url>
    <content><![CDATA[<p><em>成文于2021年8月11日离开清河村。</em><br>&emsp;&emsp;大包小包的行李，颠颠簸簸的山路，出发前忐忐忑忑的心情在进入清河村后终于有所平复，深山、公路、虫鸣、鸟叫，不仔细观察很难发现这座隐藏在山峦间的完全小学。设施落后、环境糟糕、蚊虫困扰、饮食不同，完全符合一个城市人对农村的印象。农村生活过的我自认为对环境要求不高，到了这里也难免有些烦闷。<br><img src="https://i.loli.net/2021/09/24/1mYu6dJgSeHTXDx.jpg" alt="清河村完全小学的清晨"><br><img src="https://i.loli.net/2021/09/24/aDiCOMYG7mFnoRQ.jpg" alt="山"><br>&emsp;&emsp;闲时无事，揣起相机，沿着新修的道路在村里漫步，才发现这里的一切都不是想象中的那样。道路上摩托车和大货车不断，即使急转或陡坡也都轻松通过，山路两旁都是村民种植的茶树，时不时有个斗笠冒出来，采摘着最新鲜的三片茶叶。村中邻里相互十分熟悉，抱着小孩，背着菜筐，在村公所门口摆着龙门阵，爽朗的笑声老远外就能听到。最让我意外的就是脱贫援建建设的网络设施已经成为了村民们最佳的休闲方式，在路边时不时就能听到短视频平台的神曲，想必不少村民也是某些平台的大V。 </p>
<p><img src="https://i.loli.net/2021/09/24/idPy38m9OIn6hea.jpg" alt="清河村的晚霞"><br><img src="https://i.loli.net/2021/09/24/qpxP5ImXbkTgFwz.jpg" alt="清河村的晚霞"></p>
<p>&emsp;&emsp;这里离天很近，或者说这里就在所谓的“天上”，“天上”小学的学生自然都是“天兵天将”。这次梦想教室教授的对象是四年级的小学生，这天早上8点多我们还在硬板床上做着梦，“天兵天将”已经冲进了大门，在水泥操场上撒欢了。即使很多“天兵天将”穿着相同的“制服”和“盔甲”，明亮的眼神却在黝黑的皮肤中更显耀眼。或许是对未知事物的一丝丝恐惧，每当我用镜头想要捕捉到一张张笑脸时，他们会用远超我按下快门的速度表演一个变脸，迅速板起表情，我也只能悻悻地放下相机。<br><img src="https://i.loli.net/2021/09/24/d5Iw9AcqlbP6NyT.jpg" alt="小学"><br>&emsp;&emsp;对相机有所顾忌的学生们对待知识的态度就完全不同了，即使课上常常提到陌生的概念他们也十分愿意聆听学习，常常是一提问就好多双小手在空中挥舞。上过几天课后逐渐有学生不怕我的镜头了，下课期间几个好事的小男生上来摆弄我脚架上的相机快门，吸引了其他同学的注意，“天兵天将”便纷纷在相机里留下自己的鬼脸。最后一天，小孩子们拿着纸笔一个一个问我们的电话号码，看着一张张期待的小脸，一瞬间我就扭过了头，属实是不能被看见眼红啊。<br><img src="https://i.loli.net/2021/09/24/KBYmuUxLbeMypRw.jpg" alt="山路"><br>&emsp;&emsp;总有人说，不要去支教，即使去教这些大山中的孩子，给他们看了外界的美好，他们也走不出去，或是因为能力，或是因为家庭，支教的故事只是给他们徒增烦恼罢了。对待短期支教，我更想做的是给他们送去新鲜的思想，告诉他们“绿水青山就是金山银山”，告诉他们梦想绝不渺小，梦想永远伟大。<br><img src="https://i.loli.net/2021/09/24/hnegQSNylC7tz25.jpg" alt="银河"></p>
<p>&emsp;&emsp;我从不认为自己是一个运气很好的人，但是我为能来到这座深山中的小小村庄倍感荣幸。<br><img src="https://i.loli.net/2021/09/24/AT6KXrjhfLvO7Rb.jpg" alt="村里的兔兔"><br><img src="https://i.loli.net/2021/09/24/BTdOIXhmJCYlViM.jpg" alt="银河"></p>
]]></content>
      <categories>
        <category>生活</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>支教</tag>
      </tags>
  </entry>
  <entry>
    <title>Flutter学习笔记</title>
    <url>/2021/09/28/flutter-xue-xi-bi-ji/</url>
    <content><![CDATA[<h1 id="Flutter学习笔记"><a href="#Flutter学习笔记" class="headerlink" title="Flutter学习笔记"></a>Flutter学习笔记</h1><h2 id="StatelessWidget和StatefulWidget"><a href="#StatelessWidget和StatefulWidget" class="headerlink" title="StatelessWidget和StatefulWidget"></a>StatelessWidget和StatefulWidget</h2><ul>
<li>StatelessWidget在创建之后将不会更改，想要更改只能new一个新的做替换。  </li>
<li>StatefulWidget通过在State类中调用setState((){})更新视图，触发State.build，将整个组件重新绘制，<strong>同时会导致所有子组件重新构造生成，该结点的兄弟结点组件也会被重新构造</strong>。 </li>
</ul>
<h2 id="开发时如何选择"><a href="#开发时如何选择" class="headerlink" title="开发时如何选择"></a>开发时如何选择</h2><ul>
<li>优先使用 StatelessWidget  </li>
<li>含有大量子 Widget（如根布局、次根布局）慎用 SatefulWidget</li>
<li>尽量在叶子节点时使用 StatefulWidget</li>
<li>将会调用到setState((){}) 的代码尽可能的和要更新的视图封装在一个尽可能小的模块里</li>
<li>如果一个Widget需要reBuild，那么它的子节点、兄弟节点、兄弟节点的子节点应该尽可能少</li>
</ul>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>Flutter</tag>
        <tag>Dart</tag>
      </tags>
  </entry>
  <entry>
    <title>爱快路由下无法正常解析DNS的问题</title>
    <url>/2022/03/04/ai-kuai-lu-you-xia-wu-fa-zheng-chang-jie-xi-dns-de-wen-ti/</url>
    <content><![CDATA[<blockquote>
<p>最原始的问题是发现300M的电信宽带在经过软路由后下行只有30M, 而上行还保持正常, 在排查中出现了另外的问题: 直连爱快软路由DNS解析失败, 本文解决了这两个问题</p>
</blockquote>
<p>先说结论:</p>
<p>在客户机DNS服务器设置为网关(ikuai)的情况下, 必须设置爱快的DNS加速服务中使用代理模式才能生效, 同时要开启强制客户端DNS代理, 而此时使用爱快的DNS缓存模式无法正常解析DNS</p>
<p><img src="https://s2.loli.net/2022/03/04/nbLDmNeuoryJIFv.png"></p>
<hr>
<p>以下是完整版:</p>
<p>家中稳定运行半年的网络配置如图所示, 出现问题后开始排查问题位置</p>
<p>①查看是否是运营商限制了下行带宽: 测试家中网络硬路由部分的速率发现一切正常, 所以问题出在软路由</p>
<p>②逐个排查软路由内各部分: 依次关闭adg, openwrt没有改善问题, 所以问题可能在ikuai上</p>
<p><img src="https://s2.loli.net/2022/03/04/7X6kQ9LiKyqpxIu.png" alt="家中原始网络拓扑图, 分为经过软路由的改造部分和初始路由器部分"></p>
<p>将电脑直连ikuai, 手动设置IP, DNS和网关均为ikuai, 在未做其他修改的情况下出现了无法解析DNS的情况</p>
<p><img src="https://s2.loli.net/2022/03/04/qJOzB1orpgMm54n.png" alt="7X6kQ9LiKyqpxIu"></p>
<blockquote>
<p>qq和微信都是不需要解析DNS的软件, 如果这两个软件能正常使用而网页无法打开就能确定DNS出问题</p>
</blockquote>
<p>先后修改了ikuai和电脑的DNS服务器, 从openwrt内到ikuai再到阿里腾讯, 均不能正常上网</p>
<p><img src="https://s2.loli.net/2022/03/04/brmS398LFOdwzJC.jpg" alt="ikuai内的设置, 无法解析DNS"></p>
<p>ikuai内的设置, 无法解析DNS</p>
<p>然后怀疑是不是ikuai本身就无法正常上网, 使用ikuai内的测试工具发现能够ping通域名</p>
<p><img src="https://s2.loli.net/2022/03/04/OAGZUVnaegkl3Xi.jpg"></p>
<p>到这里完全没有思路, 之前也没见过路由能解析DNS但主机不能的情况, 在网上和论坛搜索了很久都没有找到相关的情况</p>
<p>最后的最后在ikuai官方的手册里找到了答案</p>
<p><a href="https://www.ikuai8.com/index.php?option=com_content&view=article&id=129:dns&catid=39&Itemid=228">https://www.ikuai8.com/index.php?option=com_content&amp;view=article&amp;id=129:dns&amp;catid=39&amp;Itemid=228</a></p>
<p><img src="https://s2.loli.net/2022/03/04/r9JVAwTgPLbYpqu.jpg"></p>
<p>所以修改了代理模式, 开启了强制代理, 问题解决</p>
<p><img src="https://s2.loli.net/2022/03/04/BHkuZeJ2OarSUNR.jpg"></p>
<blockquote>
<p>回到最初的降速问题, 经历了iperf测速等9981种方法也没有头绪，最后竟然在V2上找到了同样的病友，最后是修改了WiFi的信道和带宽…果然没再出问题，可能是过了个年周围的邻居变多了吧…</p>
</blockquote>
]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>DNS</tag>
      </tags>
  </entry>
  <entry>
    <title>生成模型之Flow-based Model(1)前置知识</title>
    <url>/2022/07/08/sheng-cheng-mo-xing-zhi-flow-based-model-1-qian-zhi-zhi-shi/</url>
    <content><![CDATA[<h1 id="flow-based-model前置知识">Flow-based Model前置知识</h1>
<blockquote>
<p>流模型是数学上严密推理得到的模型,本篇为数学上的前置内容</p>
</blockquote>
<h2 id="雅各比矩阵-jacobian-matrix">雅各比矩阵 Jacobian Matrix</h2>
<p>对于两个矩阵<span class="math inline">\(x\)</span>和<span class="math inline">\(z\)</span><br />
<span class="math display">\[z = \left[\begin{matrix}z_{1}\\z_{2}\end{matrix}\right]\]</span> <span class="math display">\[x = \left[\begin{matrix}x_{1}\\x_{2}\end{matrix}\right]\]</span></p>
<p><span class="math inline">\(x\)</span>和<span class="math inline">\(z\)</span>之间存在关系:<br />
<span class="math inline">\(x = f(z)\)</span>, <span class="math inline">\(z = f^{-1}(x)\)</span></p>
<p>Jacobian Matrix定义为:<br />
<span class="math display">\[J_{f} = \left[ \begin{matrix} 
\partial x_{1}/\partial z_{1} &amp;&amp; \partial x_{1}/\partial z_{2} \\
\partial x_{2}/\partial z_{1} &amp;&amp; \partial x_{2}/\partial z_{2}
\end{matrix} \right]\]</span></p>
<p><span class="math display">\[
J_{f^{-1}} = \left[ \begin{matrix} 
\partial z_{1}/\partial x_{1} &amp;&amp; \partial z_{1}/\partial x_{2} \\
\partial z_{2}/\partial x_{1} &amp;&amp; \partial z_{2}/\partial x_{2}
\end{matrix} \right]
\]</span></p>
<p><span class="math display">\[
J_{f}J_{f^{-1}}=1
\]</span></p>
<h2 id="行列式-determinant">行列式 Determinant</h2>
<p>对于一个矩阵<span class="math inline">\(A\)</span><br />
<span class="math display">\[
A = \left[ \begin{matrix}a &amp;&amp; b\\c &amp;&amp; d\end{matrix}\right]
\]</span> 其行列式结果为:<br />
<span class="math display">\[
\det(A) = ad-bc
\]</span></p>
<p>对于一个矩阵<span class="math inline">\(B\)</span><br />
<span class="math display">\[
B = \left[ \begin{matrix}a_{1} &amp;&amp; a_{2} &amp;&amp; a_{3}\\a_{4} &amp;&amp; a_{5} &amp;&amp; a_{6}\\a_{7} &amp;&amp; a_{8} &amp;&amp; a_{9}\end{matrix}\right]
\]</span> 其行列式结果为:<br />
<span class="math display">\[
\det(B) = a_{1}a_{5}a_{9}+a_{2}a_{6}a_{7}+a_{3}a_{4}a_{8}-a_{3}a_{5}a_{7}-a_{2}a_{4}a_{9}-a_{1}a_{6}a_{8}
\]</span></p>
<p>有公式:<br />
<span class="math display">\[\det (A) = \frac {1}{\det(A^{-1})}\]</span></p>
<p><span class="math display">\[\det (J_{f}) = \frac {1}{\det(J_{f^{-1})}}\]</span></p>
<h2 id="可变理论-change-of-variable-theorem">可变理论 change of variable theorem</h2>
<p>对于两个概率分布<span class="math inline">\(\pi(z)\)</span>和<span class="math inline">\(p(x)\)</span><br />
其中<span class="math inline">\(x\)</span>和<span class="math inline">\(z\)</span>满足<span class="math inline">\(x=f(z)\)</span></p>
<h3 id="一维形式">一维形式</h3>
<p><span class="math display">\[ p(x&#39;)\Delta x = \pi (z&#39;)\Delta z\]</span> <span class="math display">\[p(x&#39;) = \pi (z&#39;) |\frac {\mathrm{d} z}{\mathrm{d} x}| \]</span> ### 二维形式</p>
<p><span class="math display">\[p(x&#39;)|det(J_f)|=\pi(z&#39;)\]</span> <span class="math display">\[p(x&#39;) = \pi(z&#39;)|det(J_{f^{-1}})|\]</span></p>
<h3 id="引申">引申</h3>
<p>如果<span class="math inline">\(x\)</span>和<span class="math inline">\(z\)</span>满足<span class="math inline">\(x=f(z)\)</span>,则他们的分布之间关系就是相差<span class="math inline">\(|det(J_f)|\)</span><br />
## 生成器Generator 对于一个网络<span class="math inline">\(G\)</span>,我们定义他的分布为<span class="math inline">\(P_{G}\)</span>,对于真实样本的分布为<span class="math inline">\(P_{data}\)</span><br />
对于输入<span class="math inline">\(z\)</span>,经过生成器得到的结果为<span class="math inline">\(x\)</span>,记为<span class="math inline">\(x=G(z)\)</span><br />
说明<span class="math inline">\(x\)</span>服从<span class="math inline">\(P_{G}(x)\)</span>分布 显然一个好的生成器应当使得<span class="math inline">\(P_{G}(x)\)</span>接近<span class="math inline">\(P_{data}(x)\)</span></p>
<p>因此理论上有最优生成器<span class="math inline">\(G^{*}\)</span><br />
<span class="math inline">\(G^{*}=\argmax\limits_{G} \sum\limits_{i=1}^{m}logP_{G}(x^{i})\)</span> 其中 <span class="math inline">\({x^i from P_{data}(x)}\)</span></p>
<p><span class="math inline">\(G^{*} \approx \argmin\limits_{G}KL(P_{data} || P_{G})\)</span><br />
(KL散度越小,两个分布越接近)</p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>Deep Learning</tag>
      </tags>
  </entry>
</search>
